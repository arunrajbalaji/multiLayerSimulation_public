function zOut = initDomain(nSpecies, xCenter, numericalInfo, constants)
% initDomain: Initializes domain to user-specified value for each species
% in each layer. zOut is vector of fields in interwoven format, for speed.
% Variables are interwoven for each gridpoint. For species A, B, C starting at
% gridpoint 1 and ending at gridpoint end:
%
% [ A_1
%   B_1
%   C_1
%   Potential_1
%   A_2
%   B_2
%   C_2
%   Potential_2
%    .
%    .
%    .
%   A_end
%   B_end
%   C_end
%   Potential_end ]
%
% Note: gridpoints 1 and end represent ghost cells. Dirichlet boundary
% conditions are applied at ghost cell centers, flux-based boundary
% conditions are applied at the face between ghost cells and the domain.
%
% [zOut] = initDomain(nSpecies, xCenter, numericalInfo, constants)
%
% Inputs:
%       nSpecies        - Total number of species, in the entire system.
%       xCenter         - Vector of cell centers, including ghost cells on
%                         either side of domain
%       numericalInfo   - Structure containing simulation parameters,
%                         boundary information, as generated by
%                         parseInputFile.m
%       constants       - Structure of physical constants, as generated by
%                         parseInputFile.m and genPhysConstArrays.m
%
% Outputs:
%       numericalInfo       - Structure that contains numerical parameters
%                             that pertain to the entire simulation
%       layerInfo           - Structure Array that contains parameters and
%                             constants that vary from layer to layer.
%       constants           - Structure that contains physical constants
%                             that affect all layers. Eventually, this
%                             structure is augmented to contain physical
%                             constant arrays for those constants that
%                             vary in space and are involved in vectorized
%                             computations. See genPhysConstArray().
%       uniqueSpeciesNames  - Cell array of unique species in simulation
%       rxnInfo             - Structure array used to store reaction
%                             information for each reaction, for each layer.
%
% Other m-files required: none
% MAT-files required: none
%
% See also: parseInputFile.m, genPhysConstArrays.m
%
% Author: Arunraj Balaji
% Stanford University, Mani Group
% email: abalaji@stanford.edu
% Last revision: 29-August-2022
%------------- BEGIN CODE --------------

% Initialze Advanpix multi-precision array if high precision is required,
% otherwise use MATLAB standard double precision.
if numericalInfo.highPrecision
    zOut = mp(zeros((nSpecies+1)*length(xCenter),1));
    for ii = 1:nSpecies
        zOut(ii:(nSpecies+1):end) = mp(constants.initVal(:,ii));
    end

    % Linear initial profile for potential
    zOut(nSpecies+1:nSpecies+1:end) = mp(0 + numericalInfo.appliedVoltage*xCenter/xCenter(end));
    zOut(nSpecies+1) = mp(0);
    zOut(end) = mp(numericalInfo.appliedVoltage);
else
    zOut = zeros((nSpecies+1)*length(xCenter),1);
    for ii = 1:nSpecies
        zOut(ii:(nSpecies+1):end) = constants.initVal(:,ii);
    end

    % Linear initial profile for potential
    zOut(nSpecies+1:nSpecies+1:end) = 0 + numericalInfo.appliedVoltage*xCenter/xCenter(end);
    zOut(nSpecies+1) = 0;
    zOut(end) = numericalInfo.appliedVoltage;
end

end
%------------- END OF CODE --------------